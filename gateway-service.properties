# =================================================================
# CONFIGURACIÓN CENTRALIZADA EN GIT
# ESTA CONFIGURACIÓN ES LEÍDA POR EL CONFIG SERVER Y ENTREGADA AL GATEWAY
# =================================================================

# Nombre de la aplicación (debe coincidir con spring.application.name en bootstrap.properties)
spring.application.name=gateway-service

# Puerto del Gateway.
server.port=8080

# ----------------------------------------------------------
# 1. Configuración de Eureka Client (Registro en Discovery)
# ----------------------------------------------------------
# URL de tu sys-eureka-esrvice
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# Configuración de instancia
eureka.instance.instance-id=${spring.application.name}:${random.value}
eureka.instance.prefer-ip-address=true

# ----------------------------------------------------------
# 2. Configuración de Enrutamiento del Gateway (Rutas dinámicas)
# ----------------------------------------------------------
# Habilita la resolución de rutas por nombre de servicio de Eureka (lb://NOMBRE_SERVICIO)
spring.cloud.gateway.discovery.locator.enabled=true
# Esto asegura que los nombres de servicio se busquen en minúsculas para consistencia
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# --- RUTA 1: AUTH-SERVICE ---
# Identificador de la ruta
spring.cloud.gateway.routes[0].id=auth-service
# URI de destino (lb:// significa que buscará en Eureka el servicio AUTH-SERVICE)
spring.cloud.gateway.routes[0].uri=lb://auth-service
# Predicado (define la URL de entrada que activa esta ruta)
spring.cloud.gateway.routes[0].predicates[0]=Path=/auth/**
# Predicado 2: SOLO permite estos métodos. OPTIONS queda excluido
spring.cloud.gateway.routes[0].predicates[1]=Method=GET,POST,PUT,DELETE,PATCH
# Filtro: Reescribe la ruta. Mantenemos el prefijo /auth porque el servicio de negocio lo usa.
# Esto convierte /auth/login a /auth/login en el destino.
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/auth/(?<segment>.*), /auth/${segment}

# --- RUTA 2: SECURITY-SERVICE (EJEMPLO) ---
spring.cloud.gateway.routes[1].id=security-service
spring.cloud.gateway.routes[1].uri=lb://security-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/security/**
spring.cloud.gateway.routes[1].predicates[1]=Method=GET,POST,PUT,DELETE,PATCH
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/security/(?<segment>.*), /security/${segment}

# --- RUTA 3: GENERAL-SERVICE (EJEMPLO) ---
spring.cloud.gateway.routes[2].id=general-service
spring.cloud.gateway.routes[2].uri=lb://general-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/general/**
spring.cloud.gateway.routes[2].predicates[1]=Method=GET,POST,PUT,DELETE,PATCH
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/general/(?<segment>.*), /general/${segment}

# --- RUTA 4: ACCOUNTING-SERVICE (EJEMPLO) ---
spring.cloud.gateway.routes[3].id=accounting-service
spring.cloud.gateway.routes[3].uri=lb://accounting-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/accounting/**
spring.cloud.gateway.routes[3].predicates[1]=Method=GET,POST,PUT,DELETE,PATCH
spring.cloud.gateway.routes[3].filters[0]=RewritePath=/accounting/(?<segment>.*), /accounting/${segment}

# --- RUTA 5: CRM-SERVICE (EJEMPLO) ---
spring.cloud.gateway.routes[4].id=crm-service
spring.cloud.gateway.routes[4].uri=lb://crm-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/crm/**
spring.cloud.gateway.routes[4].predicates[1]=Method=GET,POST,PUT,DELETE,PATCH
spring.cloud.gateway.routes[4].filters[0]=RewritePath=/crm/(?<segment>.*), /crm/${segment}

# --- RUTA 6: BILLING-SERVICE (EJEMPLO) ---
spring.cloud.gateway.routes[5].id=billing-service
spring.cloud.gateway.routes[5].uri=lb://billing-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/billing/**
spring.cloud.gateway.routes[5].predicates[1]=Method=GET,POST,PUT,DELETE,PATCH
spring.cloud.gateway.routes[5].filters[0]=RewritePath=/billing/(?<segment>.*), /billing/${segment}

# spring.cloud.gateway.server.webflux.globalcors.cors-configurations.['/**'].allowedOrigins=*
# spring.cloud.gateway.server.webflux.globalcors.cors-configurations.['/**'].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
# spring.cloud.gateway.server.webflux.globalcors.cors-configurations.['/**'].allowedHeaders=Origin,Content-Type,Accept,Authorization,offset
# spring.cloud.gateway.server.webflux.globalcors.cors-configurations.['/**'].allowCredentials=true
# spring.cloud.gateway.server.webflux.globalcors.cors-configurations.['/**'].maxAge=3600