# =================================================================
# CONFIGURACIÓN CENTRALIZADA EN GIT
# ESTA CONFIGURACIÓN ES LEÍDA POR EL CONFIG SERVER Y ENTREGADA AL GATEWAY
# =================================================================

# Nombre de la aplicación (debe coincidir con spring.application.name en bootstrap.properties)
spring.application.name=gateway-service

# Puerto del Gateway.
server.port=8080

# ----------------------------------------------------------
# 1. Configuración de Eureka Client (Registro en Discovery)
# ----------------------------------------------------------
# URL de tu sys-eureka-esrvice
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# Configuración de instancia
eureka.instance.instance-id=${spring.application.name}:${random.value}
eureka.instance.prefer-ip-address=true

# ----------------------------------------------------------
# 2. Configuración de Enrutamiento del Gateway (Rutas dinámicas)
# ----------------------------------------------------------
# Habilita la resolución de rutas por nombre de servicio de Eureka (lb://NOMBRE_SERVICIO)
spring.cloud.gateway.discovery.locator.enabled=true
# Esto asegura que los nombres de servicio se busquen en minúsculas para consistencia
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# --- RUTA 1: AUTH-SERVICE ---
# Identificador de la ruta
spring.cloud.gateway.routes[0].id=auth-service
# URI de destino (lb:// significa que buscará en Eureka el servicio AUTH-SERVICE)
spring.cloud.gateway.routes[0].uri=lb://auth-service
# Predicado (define la URL de entrada que activa esta ruta)
spring.cloud.gateway.routes[0].predicates[0]=Path=/auth/**
# Filtro: Reescribe la ruta. Mantenemos el prefijo /auth porque el servicio de negocio lo usa.
# Esto convierte /auth/login a /auth/login en el destino.
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/auth/(?<segment>.*), /auth/${segment}

# --- RUTA 2: SECURITY-SERVICE (EJEMPLO) ---
# Identificador de la ruta
spring.cloud.gateway.routes[1].id=security-service
# URI de destino
spring.cloud.gateway.routes[1].uri=lb://security-service
# Predicado
spring.cloud.gateway.routes[1].predicates[0]=Path=/security/**
# Filtro: Aquí eliminamos el prefijo /security/ antes de enviarlo al microservicio.
# Esto convierte /security/users a /users en el destino.
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/security/(?<segment>.*), /${segment}